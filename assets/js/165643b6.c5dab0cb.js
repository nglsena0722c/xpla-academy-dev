"use strict";(self.webpackChunkxpla_academy=self.webpackChunkxpla_academy||[]).push([[4021],{34673:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(87462),r=a(67294),s=a(86010),i=a(72389),l=a(86043);const o={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function c(e){return!!e&&("SUMMARY"===e.tagName||c(e.parentElement))}function d(e,t){return!!e&&(e===t||d(e.parentElement,t))}function p(e){let{summary:t,children:a,...p}=e;const u=(0,i.Z)(),m=(0,r.useRef)(null),{collapsed:h,setCollapsed:k}=(0,l.u)({initialState:!p.open}),[g,w]=(0,r.useState)(p.open),b=r.isValidElement(t)?t:r.createElement("summary",null,t??"Details");return r.createElement("details",(0,n.Z)({},p,{ref:m,open:g,"data-collapsed":h,className:(0,s.Z)(o.details,u&&o.isBrowser,p.className),onMouseDown:e=>{c(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;c(t)&&d(t,m.current)&&(e.preventDefault(),h?(k(!1),w(!0)):k(!0))}}),b,r.createElement(l.z,{lazy:!1,collapsed:h,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{k(e),w(!e)}},r.createElement("div",{className:o.collapsibleContent},a)))}const u={details:"details_b_Ee"},m="alert alert--info";function h(e){let{...t}=e;return r.createElement(p,(0,n.Z)({},t,{className:(0,s.Z)(m,u.details,t.className)}))}},51007:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const s={browserWindow:"browserWindow_my1Q",browserWindowHeader:"browserWindowHeader_jXSR",row:"row_KZDM",buttons:"buttons_uHc7",right:"right_oyze",browserWindowAddressBar:"browserWindowAddressBar_Pd8y",dot:"dot_giz1",browserWindowMenuIcon:"browserWindowMenuIcon_Vhuh",bar:"bar_rrRL",browserWindowBody:"browserWindowBody_Idgs"};function i(e){let{children:t,minHeight:a,url:i="http://localhost:3000",style:l,bodyStyle:o}=e;return n.createElement("div",{className:s.browserWindow,style:{...l,minHeight:a}},n.createElement("div",{className:s.browserWindowHeader},n.createElement("div",{className:s.buttons},n.createElement("span",{className:s.dot,style:{background:"#f25f58"}}),n.createElement("span",{className:s.dot,style:{background:"#fbbe3c"}}),n.createElement("span",{className:s.dot,style:{background:"#58cb42"}})),n.createElement("div",{className:(0,r.Z)(s.browserWindowAddressBar,"text--truncate")},i),n.createElement("div",{className:s.browserWindowMenuIcon},n.createElement("div",null,n.createElement("span",{className:s.bar}),n.createElement("span",{className:s.bar}),n.createElement("span",{className:s.bar})))),n.createElement("div",{className:s.browserWindowBody,style:o},t))}},61497:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294);const r=e=>{let{imgSrc:t,style:a}=e;return n.createElement("img",{className:"max-w-sm",style:a,src:t,alt:""})}},12798:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>k,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=a(87462),r=a(67294),s=a(3905),i=(a(34673),a(18947));const l=()=>r.createElement(i.xR,{customSetup:{dependencies:{"@xpla/xpla.js":"^0.3.1","crypto-browserify":"latest"},entry:"index.js"},files:{"/index.js":'const { LCDClient } = require("@xpla/xpla.js");\n\nconst lcd = new LCDClient({\n  chainID: \'cube_47-5\',\n  URL: \'https://cube-lcd.xpla.dev\'\n});\n\nasync function main() {\n  const txInfo = await lcd.tx.txInfo("ECDBC35B66384DEE25987AA0DDAE8CF946D1F4907B04A0E77939988474013353"); // \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\n  console.log(JSON.stringify(txInfo, null, 2));\n\n  const balance = await lcd.bank.balance("xpla1f6hcc3hpxyg8rst9d5sg393e5jaj7453t0xmz8"); // \uc794\uc561 \uc815\ubcf4\n  console.log(JSON.stringify(balance, null, 2));\n}\nmain()'},options:{layout:"console",showLineNumbers:!0,editorHeight:400}});a(61497),a(51007);const o={sidebar_position:3},c="Check Transactions (Javascript)",d={unversionedId:"settings/create-testnet-transaction/send-query",id:"settings/create-testnet-transaction/send-query",title:"Check Transactions (Javascript)",description:"In this step, let's write code to directly retrieve the transaction data created in the previous step.",source:"@site/startlearning/2-settings/2-create-testnet-transaction/3-send-query.mdx",sourceDirName:"2-settings/2-create-testnet-transaction",slug:"/settings/create-testnet-transaction/send-query",permalink:"/xpla-academy-dev/startlearning/settings/create-testnet-transaction/send-query",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Check Transactions (Explorer)",permalink:"/xpla-academy-dev/startlearning/settings/create-testnet-transaction/check-tx-in-explorer"},next:{title:"Create and Check Transactions (CLI)",permalink:"/xpla-academy-dev/startlearning/settings/create-testnet-transaction/use-xplad"}},p={},u=[{value:"Preview",id:"preview",level:2},{value:"Fetching Transaction Data with JavaScript",id:"runjs",level:2},{value:"Executing the Code",id:"runcode",level:3},{value:"Explanation",id:"explaination",level:2},{value:"Wrapping Up",id:"conclusion",level:2}],m={toc:u},h="wrapper";function k(e){let{components:t,...a}=e;return(0,s.kt)(h,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"check-transactions-javascript"},"Check Transactions (Javascript)"),(0,s.kt)("p",null,"In this step, let's write code to directly retrieve the transaction data created in the ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/settings/create-testnet-transaction/send-tx"},"previous step"),"."),(0,s.kt)("h2",{id:"preview"},"Preview"),(0,s.kt)("p",null,"The JavaScript code to fetch data looks like below. Replace the hash value of the transaction you created in line 9 and your wallet address in line 12. Modify and run the code, and you'll see the execution result on the right side after a short wait."),(0,s.kt)(l,{mdxType:"Ex03"}),(0,s.kt)("br",null),(0,s.kt)("p",null,"If you've understood the Preview Code, you can skip reading the ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/settings/create-testnet-transaction/send-query#runjs"},"following content")," and proceed to the ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/make-cw20/make-cw20-with-vault"},"next step"),"."),(0,s.kt)("h2",{id:"runjs"},"Fetching Transaction Data with JavaScript"),(0,s.kt)("p",null,"Let's use JavaScript code to fetch the transaction data created in the ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/settings/create-testnet-transaction/send-tx"},"previous step"),"."),(0,s.kt)("h3",{id:"runcode"},"Executing the Code"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Create an example-3.js file.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Copy the code below and paste it into the example-3.js file, then save it."),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const { LCDClient } = require("@xpla/xpla.js");\n\nconst lcd = new LCDClient({\n    chainID: \'cube_47-5\',\n    URL: \'https://cube-lcd.xpla.dev\'\n});\n\nasync function main() {\n    const txInfo = await lcd.tx.txInfo("ECDBC35B66384DEE25987AA0DDAE8CF946D1F4907B04A0E77939988474013353"); // Transaction data\n    console.log(JSON.stringify(txInfo, null, 2));\n\n    const balance = await lcd.bank.balance("xpla1f6hcc3hpxyg8rst9d5sg393e5jaj7453t0xmz8"); // Balance details\n    console.log(JSON.stringify(balance, null, 2));\n}\nmain()\n'))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Replace ",(0,s.kt)("inlineCode",{parentName:"p"},"ECDBC35B66384DEE25987AA0DDAE8CF946D1F4907B04A0E77939988474013353")," in line 9 with the hash value of your created transaction. Also, replace ",(0,s.kt)("inlineCode",{parentName:"p"},"xpla1f6hcc3hpxyg8rst9d5sg393e5jaj7453t0xmz8")," in line 12 with your wallet address.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Enter the command below in the VSCode Terminal."),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"node example-3.js\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Check the results in the terminal. You'll see the transaction data and your wallet information."))),(0,s.kt)("h2",{id:"explaination"},"Explanation"),(0,s.kt)("p",null,"We're using the LCDClient's ",(0,s.kt)("inlineCode",{parentName:"p"},"txInfo")," function to retrieve transaction data for the given hash value. When you examine the execution result, you'll find details like the height of the block where the transaction was created (Height), the transaction hash value (txhash), and the timestamp of transaction creation (timestamp). You can extract the necessary information from the result."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const txInfo = await lcd.tx.txInfo("ECDBC35B66384DEE25987AA0DDAE8CF946D1F4907B04A0E77939988474013353"); // Transaction data\nconsole.log(JSON.stringify(txInfo, null, 2));\n')),(0,s.kt)("br",null),(0,s.kt)("p",null,"We're also using the LCDClient's ",(0,s.kt)("inlineCode",{parentName:"p"},"balance")," function to fetch the balance of the provided address. Although you received 100 XPLA from the Faucet, you sent a lower amount in the transaction. Check if the amount is displayed correctly."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const balance = await lcd.bank.balance("xpla1f6hcc3hpxyg8rst9d5sg393e5jaj7453t0xmz8"); // Balance details\nconsole.log(JSON.stringify(balance, null, 2));\n')),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Is the balance displaying a large number? That's because the balance is in ",(0,s.kt)("inlineCode",{parentName:"p"},"aXPLA")," units. Remember, 10",(0,s.kt)("sup",null,"18")," ",(0,s.kt)("inlineCode",{parentName:"p"},"aXPLA")," is equivalent to 1 ",(0,s.kt)("inlineCode",{parentName:"p"},"XPLA"),"."),(0,s.kt)("p",{parentName:"admonition"},"Compare your results with the Preview Code's outcome.")),(0,s.kt)("h2",{id:"conclusion"},"Wrapping Up"),(0,s.kt)("p",null,"The results obtained through the code can also be verified in the ",(0,s.kt)("a",{parentName:"p",href:"https://explorer.xpla.io/"},"XPLA Explorer"),". Now you have the ability to perform various tasks using code."),(0,s.kt)("p",null,"With this, you've learned how to create transactions on the XPLA blockchain and retrieve data! In the next step, let's dive deeper into ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/make-cw20/make-cw20-with-vault"},"further exploration"),"."))}k.isMDXComponent=!0}}]);