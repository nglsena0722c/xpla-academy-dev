"use strict";(self.webpackChunkxpla_academy=self.webpackChunkxpla_academy||[]).push([[6328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,g=d["".concat(i,".").concat(u)]||d[u]||p[u]||s;return n?a.createElement(g,l(l({ref:t},m),{},{components:n})):a.createElement(g,l({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<s;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},34673:(e,t,n)=>{n.d(t,{Z:()=>g});var a=n(87462),r=n(67294),s=n(86010),l=n(72389),o=n(86043);const i={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function c(e){return!!e&&("SUMMARY"===e.tagName||c(e.parentElement))}function m(e,t){return!!e&&(e===t||m(e.parentElement,t))}function d(e){let{summary:t,children:n,...d}=e;const p=(0,l.Z)(),u=(0,r.useRef)(null),{collapsed:g,setCollapsed:h}=(0,o.u)({initialState:!d.open}),[x,f]=(0,r.useState)(d.open),y=r.isValidElement(t)?t:r.createElement("summary",null,t??"Details");return r.createElement("details",(0,a.Z)({},d,{ref:u,open:x,"data-collapsed":g,className:(0,s.Z)(i.details,p&&i.isBrowser,d.className),onMouseDown:e=>{c(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;c(t)&&m(t,u.current)&&(e.preventDefault(),g?(h(!1),f(!0)):h(!0))}}),y,r.createElement(o.z,{lazy:!1,collapsed:g,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{h(e),f(!e)}},r.createElement("div",{className:i.collapsibleContent},n)))}const p={details:"details_b_Ee"},u="alert alert--info";function g(e){let{...t}=e;return r.createElement(d,(0,a.Z)({},t,{className:(0,s.Z)(u,p.details,t.className)}))}},88988:(e,t,n)=>{n.d(t,{I_:()=>r,dP:()=>s,wg:()=>l});var a=n(67294);const r=()=>a.createElement("img",{style:{marginBottom:-2},src:"/xpla-academy-dev/img/3-tutorial/3-deep-understand-xpla/5-convert/academy-diamond.svg",width:"16",height:"16"}),s=()=>a.createElement("img",{style:{marginBottom:-2},src:"/xpla-academy-dev/img/3-tutorial/3-deep-understand-xpla/5-convert/academy-token.svg",width:"16",height:"16"}),l=()=>a.createElement("img",{style:{marginBottom:-2},src:"/xpla-academy-dev/img/logo192.png",width:"16",height:"16"})},22306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>C,contentTitle:()=>b,default:()=>D,frontMatter:()=>w,metadata:()=>N,toc:()=>T});var a=n(87462),r=n(67294),s=n(3905),l=n(34673),o=n(88988),i=n(73727),c=function(){return c=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},c.apply(this,arguments)};var m="",d=null,p=null,u=null;function g(){m="",null!==d&&d.disconnect(),null!==p&&(window.clearTimeout(p),p=null)}function h(e){return["BUTTON","INPUT","SELECT","TEXTAREA"].includes(e.tagName)&&!e.hasAttribute("disabled")||["A","AREA"].includes(e.tagName)&&e.hasAttribute("href")}function x(){var e=null;if("#"===m)e=document.body;else{var t=m.replace("#","");null===(e=document.getElementById(t))&&"#top"===m&&(e=document.body)}if(null!==e){u(e);var n=e.getAttribute("tabindex");return null!==n||h(e)||e.setAttribute("tabindex",-1),e.focus({preventScroll:!0}),null!==n||h(e)||(e.blur(),e.removeAttribute("tabindex")),g(),!0}return!1}function f(e){return r.forwardRef((function(t,n){var a="";"string"==typeof t.to&&t.to.includes("#")?a="#"+t.to.split("#").slice(1).join("#"):"object"==typeof t.to&&"string"==typeof t.to.hash&&(a=t.to.hash);var s={};e===i.OL&&(s.isActive=function(e,t){return e&&e.isExact&&t.hash===a});var l=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n}(t,["scroll","smooth","timeout","elementId"]);return r.createElement(e,c({},s,l,{onClick:function(e){var n;g(),m=t.elementId?"#"+t.elementId:a,t.onClick&&t.onClick(e),""===m||e.defaultPrevented||0!==e.button||t.target&&"_self"!==t.target||e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||(u=t.scroll||function(e){return t.smooth?e.scrollIntoView({behavior:"smooth"}):e.scrollIntoView()},n=t.timeout,window.setTimeout((function(){!1===x()&&(null===d&&(d=new MutationObserver(x)),d.observe(document,{attributes:!0,childList:!0,subtree:!0}),p=window.setTimeout((function(){g()}),n||1e4))}),0))},ref:n}),t.children)}))}var y=f(i.rU);f(i.OL);const k=e=>{let{to:t,children:n,className:a=""}=e;return r.createElement(y,{scroll:e=>(e=>{const t=e.getBoundingClientRect().top+window.pageYOffset;window.scrollTo({top:t+-80})})(e),to:t,className:a},n)},v=()=>r.createElement("div",{className:"docusaurus-mermaid-container container_src-theme-Mermaid-styles-module",id:"case1-pic"},r.createElement("svg",{"aria-roledescription":"sequence",role:"graphics-document document",viewBox:"-50 -10 650 791",style:{maxWidth:650},xmlns:"http://www.w3.org/2000/svg",width:"100%",id:"mermaid-svg-6519240"},r.createElement("style",{dangerouslySetInnerHTML:{__html:'#mermaid-svg-6519240{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-6519240 .error-icon{fill:#552222;}#mermaid-svg-6519240 .error-text{fill:#552222;stroke:#552222;}#mermaid-svg-6519240 .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-6519240 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-6519240 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-6519240 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-6519240 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-6519240 .marker{fill:#333333;stroke:#333333;}#mermaid-svg-6519240 .marker.cross{stroke:#333333;}#mermaid-svg-6519240 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-6519240 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-6519240 text.actor>tspan{fill:black;stroke:none;}#mermaid-svg-6519240 .actor-line{stroke:grey;}#mermaid-svg-6519240 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-svg-6519240 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-svg-6519240 #arrowhead path{fill:#333;stroke:#333;}#mermaid-svg-6519240 .sequenceNumber{fill:white;}#mermaid-svg-6519240 #sequencenumber{fill:#333;}#mermaid-svg-6519240 #crosshead path{fill:#333;stroke:#333;}#mermaid-svg-6519240 .messageText{fill:#333;stroke:none;}#mermaid-svg-6519240 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-6519240 .labelText,#mermaid-svg-6519240 .labelText>tspan{fill:black;stroke:none;}#mermaid-svg-6519240 .loopText,#mermaid-svg-6519240 .loopText>tspan{fill:black;stroke:none;}#mermaid-svg-6519240 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-svg-6519240 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-svg-6519240 .noteText,#mermaid-svg-6519240 .noteText>tspan{fill:black;stroke:none;}#mermaid-svg-6519240 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-svg-6519240 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-svg-6519240 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-svg-6519240 .actorPopupMenu{position:absolute;}#mermaid-svg-6519240 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-svg-6519240 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-6519240 .actor-man circle,#mermaid-svg-6519240 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-svg-6519240 .messageText:nth-of-type(1){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(2){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(3){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(4){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(5){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(7){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 .messageText:nth-of-type(8){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-6519240 g:nth-of-type(5) .note{stroke:#004FFF;fill:white;}#mermaid-svg-6519240 g:nth-of-type(5) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-6519240 g:nth-of-type(6) .note{stroke:#004FFF;fill:white;}#mermaid-svg-6519240 g:nth-of-type(6) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-6519240 g:nth-of-type(7) .note{stroke:#004FFF;fill:white;}#mermaid-svg-6519240 g:nth-of-type(7) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-6519240 g:nth-of-type(8) .note{stroke:#004FFF;fill:white;}#mermaid-svg-6519240 g:nth-of-type(8) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-6519240 g:nth-of-type(9) .note{stroke:#004FFF;fill:white;}#mermaid-svg-6519240 g:nth-of-type(9) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-6519240 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}'}}),r.createElement("g",null),r.createElement("defs",null,r.createElement("symbol",{height:24,width:24,id:"computer"},r.createElement("path",{d:"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z",transform:"scale(.5)"}))),r.createElement("defs",null,r.createElement("symbol",{clipRule:"evenodd",fillRule:"evenodd",id:"database"},r.createElement("path",{d:"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z",transform:"scale(.5)"}))),r.createElement("defs",null,r.createElement("symbol",{height:24,width:24,id:"clock"},r.createElement("path",{d:"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z",transform:"scale(.5)"}))),r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:725,x2:75,y1:80,x1:75,id:"actor18"}),r.createElement("g",{className:"actor-man"},r.createElement("line",{y2:45,x2:75,y1:25,x1:75,id:"actor-man-torso18"}),r.createElement("line",{y2:33,x2:93,y1:33,x1:57,id:"actor-man-arms18"}),r.createElement("line",{y2:45,x2:75,y1:60,x1:57}),r.createElement("line",{y2:60,x2:91,y1:45,x1:75}),r.createElement("circle",{height:65,width:150,r:15,cy:10,cx:75}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"67.5",x:75},r.createElement("tspan",{dy:0,x:75},"User Client App"))),r.createElement("g",null,r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:725,x2:275,y1:5,x1:275,id:"actor19"}),r.createElement("g",{id:"root-19"},r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:0,x:200}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"32.5",x:275},r.createElement("tspan",{dy:0,x:275},"Convert server")))),r.createElement("g",null,r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:725,x2:475,y1:5,x1:475,id:"actor20"}),r.createElement("g",{id:"root-20"},r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:0,x:400}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"32.5",x:475},r.createElement("tspan",{dy:0,x:475},"Database(DB)")))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:12,markerWidth:12,markerUnits:"userSpaceOnUse",refY:5,refX:9,id:"arrowhead"},r.createElement("path",{d:"M 0 0 L 10 5 L 0 10 z"}))),r.createElement("defs",null,r.createElement("marker",{refY:5,refX:4,orient:"auto",markerHeight:8,markerWidth:15,id:"crosshead"},r.createElement("path",{style:{strokeDasharray:"0, 0"},d:"M 1,2 L 6,7 M 6,2 L 1,7",strokeWidth:"1pt",stroke:"#000000",fill:"none"}))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:28,markerWidth:20,refY:7,refX:18,id:"filled-head"},r.createElement("path",{d:"M 18,7 L9,13 L14,7 L9,1 Z"}))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:40,markerWidth:60,refY:15,refX:15,id:"sequencenumber"},r.createElement("circle",{r:6,cy:15,cx:15}))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step3"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:179,x:200}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:184,x:275},r.createElement("tspan",{className:"textDecoration-xpla",x:275},"Step 3")))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step5"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:282,x:0}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:287,x:75},r.createElement("tspan",{className:"textDecoration-xpla",x:75},"Step 5")))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step8"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:489,x:200}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:494,x:275},r.createElement("tspan",{className:"textDecoration-xpla",x:275},"Step 8")))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step9"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:540,x:200}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:545,x:275},r.createElement("tspan",{className:"textDecoration-xpla",x:275},"Step 9")))),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step1"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:80,x:175},"Step 1")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:117,x2:275,y1:117,x1:75}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step2"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:132,x:375},"Step 2")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:169,x2:475,y1:169,x1:275}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step4"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:235,x:175},"Step 4")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:272,x2:75,y1:272,x1:275}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step6"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:338,x:175},"Step 6")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:375,x2:275,y1:375,x1:75}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step7"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:390,x:375},"Step 7")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:427,x2:475,y1:427,x1:275}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:442,x:375},"Pass Sequence number"),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:479,x2:275,y1:479,x1:475}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step10"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:596,x:375},"Step 10")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:633,x2:475,y1:633,x1:275}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-step11"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:648,x:175},"Step 11")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:685,x2:75,y1:685,x1:275}),r.createElement("g",{className:"actor-man"},r.createElement("line",{y2:750,x2:75,y1:730,x1:75,id:"actor-man-torso20"}),r.createElement("line",{y2:738,x2:93,y1:738,x1:57,id:"actor-man-arms20"}),r.createElement("line",{y2:750,x2:75,y1:765,x1:57}),r.createElement("line",{y2:765,x2:91,y1:750,x1:75}),r.createElement("circle",{height:65,width:150,r:15,cy:715,cx:75}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"772.5",x:75},r.createElement("tspan",{dy:0,x:75},"User Client App"))),r.createElement("g",null,r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:705,x:200}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"737.5",x:275},r.createElement("tspan",{dy:0,x:275},"Convert server"))),r.createElement("g",null,r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:705,x:400}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"737.5",x:475},r.createElement("tspan",{dy:0,x:475},"Database(DB)"))))),E=()=>r.createElement("div",{className:"docusaurus-mermaid-container container_src-theme-Mermaid-styles-module",id:"case2-pic"},r.createElement("svg",{"aria-roledescription":"sequence",role:"graphics-document document",viewBox:"-50 -10 650 584",style:{maxWidth:650},xmlns:"http://www.w3.org/2000/svg",width:"100%",id:"mermaid-svg-1558771"},r.createElement("style",{dangerouslySetInnerHTML:{__html:'#mermaid-svg-1558771{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-svg-1558771 .error-icon{fill:#552222;}#mermaid-svg-1558771 .error-text{fill:#552222;stroke:#552222;}#mermaid-svg-1558771 .edge-thickness-normal{stroke-width:2px;}#mermaid-svg-1558771 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-svg-1558771 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-svg-1558771 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-svg-1558771 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-svg-1558771 .marker{fill:#333333;stroke:#333333;}#mermaid-svg-1558771 .marker.cross{stroke:#333333;}#mermaid-svg-1558771 svg{font-family:"trebuchet ms",verdana,arial,sans-serif;font-size:16px;}#mermaid-svg-1558771 .actor{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-1558771 text.actor>tspan{fill:black;stroke:none;}#mermaid-svg-1558771 .actor-line{stroke:grey;}#mermaid-svg-1558771 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-svg-1558771 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-svg-1558771 #arrowhead path{fill:#333;stroke:#333;}#mermaid-svg-1558771 .sequenceNumber{fill:white;}#mermaid-svg-1558771 #sequencenumber{fill:#333;}#mermaid-svg-1558771 #crosshead path{fill:#333;stroke:#333;}#mermaid-svg-1558771 .messageText{fill:#333;stroke:none;}#mermaid-svg-1558771 .labelBox{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-1558771 .labelText,#mermaid-svg-1558771 .labelText>tspan{fill:black;stroke:none;}#mermaid-svg-1558771 .loopText,#mermaid-svg-1558771 .loopText>tspan{fill:black;stroke:none;}#mermaid-svg-1558771 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);}#mermaid-svg-1558771 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-svg-1558771 .noteText,#mermaid-svg-1558771 .noteText>tspan{fill:black;stroke:none;}#mermaid-svg-1558771 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-svg-1558771 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-svg-1558771 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-svg-1558771 .actorPopupMenu{position:absolute;}#mermaid-svg-1558771 .actorPopupMenuPanel{position:absolute;fill:#ECECFF;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2);filter:drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));}#mermaid-svg-1558771 .actor-man line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;}#mermaid-svg-1558771 .actor-man circle,#mermaid-svg-1558771 line{stroke:hsl(259.6261682243, 59.7765363128%, 87.9019607843%);fill:#ECECFF;stroke-width:2px;}#mermaid-svg-1558771 .messageText:nth-of-type(1){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(2){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(3){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(4){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(5){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(7){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 .messageText:nth-of-type(8){font-weight:bold!important;fill:#004FFF;}#mermaid-svg-1558771 g:nth-of-type(5) .note{stroke:#004FFF;fill:white;}#mermaid-svg-1558771 g:nth-of-type(5) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-1558771 g:nth-of-type(6) .note{stroke:#004FFF;fill:white;}#mermaid-svg-1558771 g:nth-of-type(6) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-1558771 g:nth-of-type(7) .note{stroke:#004FFF;fill:white;}#mermaid-svg-1558771 g:nth-of-type(7) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-1558771 g:nth-of-type(8) .note{stroke:#004FFF;fill:white;}#mermaid-svg-1558771 g:nth-of-type(8) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-1558771 g:nth-of-type(9) .note{stroke:#004FFF;fill:white;}#mermaid-svg-1558771 g:nth-of-type(9) .noteText tspan{fill:#004FFF;font-weight:bold;}#mermaid-svg-1558771 :root{--mermaid-font-family:"trebuchet ms",verdana,arial,sans-serif;}'}}),r.createElement("g",null),r.createElement("defs",null,r.createElement("symbol",{height:24,width:24,id:"computer"},r.createElement("path",{d:"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z",transform:"scale(.5)"}))),r.createElement("defs",null,r.createElement("symbol",{clipRule:"evenodd",fillRule:"evenodd",id:"database"},r.createElement("path",{d:"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z",transform:"scale(.5)"}))),r.createElement("defs",null,r.createElement("symbol",{height:24,width:24,id:"clock"},r.createElement("path",{d:"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z",transform:"scale(.5)"}))),r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:518,x2:75,y1:80,x1:75,id:"actor3"}),r.createElement("g",{className:"actor-man"},r.createElement("line",{y2:45,x2:75,y1:25,x1:75,id:"actor-man-torso3"}),r.createElement("line",{y2:33,x2:93,y1:33,x1:57,id:"actor-man-arms3"}),r.createElement("line",{y2:45,x2:75,y1:60,x1:57}),r.createElement("line",{y2:60,x2:91,y1:45,x1:75}),r.createElement("circle",{height:65,width:150,r:15,cy:10,cx:75}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"67.5",x:75},r.createElement("tspan",{dy:0,x:75},"User Client App"))),r.createElement("g",null,r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:518,x2:275,y1:5,x1:275,id:"actor4"}),r.createElement("g",{id:"root-4"},r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:0,x:200}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"32.5",x:275},r.createElement("tspan",{dy:0,x:275},"Convert server")))),r.createElement("g",null,r.createElement("line",{stroke:"#999",strokeWidth:"0.5px",y2:518,x2:475,y1:5,x1:475,id:"actor5"}),r.createElement("g",{id:"root-5"},r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:0,x:400}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"32.5",x:475},r.createElement("tspan",{dy:0,x:475},"Database(DB)")))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:12,markerWidth:12,markerUnits:"userSpaceOnUse",refY:5,refX:9,id:"arrowhead"},r.createElement("path",{d:"M 0 0 L 10 5 L 0 10 z"}))),r.createElement("defs",null,r.createElement("marker",{refY:5,refX:4,orient:"auto",markerHeight:8,markerWidth:15,id:"crosshead"},r.createElement("path",{style:{strokeDasharray:"0, 0"},d:"M 1,2 L 6,7 M 6,2 L 1,7",strokeWidth:"1pt",stroke:"#000000",fill:"none"}))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:28,markerWidth:20,refY:7,refX:18,id:"filled-head"},r.createElement("path",{d:"M 18,7 L9,13 L14,7 L9,1 Z"}))),r.createElement("defs",null,r.createElement("marker",{orient:"auto",markerHeight:40,markerWidth:60,refY:15,refX:15,id:"sequencenumber"},r.createElement("circle",{r:6,cy:15,cx:15}))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step2"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:127,x:200}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:132,x:275},r.createElement("tspan",{className:"textDecoration-xpla",x:275},"Step 2")))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step4"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:230,x:0}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:235,x:75},r.createElement("tspan",{className:"textDecoration-xpla",x:75},"Step 4")))),r.createElement("g",null,r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step6"},r.createElement("rect",{className:"note",ry:0,rx:0,height:41,width:150,stroke:"#666",fill:"#EDF2AE",y:333,x:200}),r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"noteText",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:338,x:275},r.createElement("tspan",{className:"textDecoration-xpla",x:275},"Step 6")))),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step1"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:80,x:175},"Step 1")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:117,x2:275,y1:117,x1:75}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step3"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:183,x:175},"Step 3")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:220,x2:75,y1:220,x1:275}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step5"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:286,x:175},"Step 5")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:323,x2:275,y1:323,x1:75}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step7"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:389,x:375},"Step 7")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:426,x2:475,y1:426,x1:275}),r.createElement(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-step8"},r.createElement("text",{style:{fontSize:16,fontWeight:400},dy:"1em",className:"messageText textDecoration-xpla",alignmentBaseline:"middle",dominantBaseline:"middle",textAnchor:"middle",y:441,x:175},"Step 8")),r.createElement("line",{style:{fill:"none"},markerEnd:"url(#arrowhead)",stroke:"none",strokeWidth:2,className:"messageLine0",y2:478,x2:75,y1:478,x1:275}),r.createElement("g",{className:"actor-man"},r.createElement("line",{y2:543,x2:75,y1:523,x1:75,id:"actor-man-torso5"}),r.createElement("line",{y2:531,x2:93,y1:531,x1:57,id:"actor-man-arms5"}),r.createElement("line",{y2:543,x2:75,y1:558,x1:57}),r.createElement("line",{y2:558,x2:91,y1:543,x1:75}),r.createElement("circle",{height:65,width:150,r:15,cy:508,cx:75}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"565.5",x:75},r.createElement("tspan",{dy:0,x:75},"User Client App"))),r.createElement("g",null,r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:498,x:200}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"530.5",x:275},r.createElement("tspan",{dy:0,x:275},"Convert server"))),r.createElement("g",null,r.createElement("rect",{className:"actor",ry:3,rx:3,height:65,width:150,stroke:"#666",fill:"#eaeaea",y:498,x:400}),r.createElement("text",{style:{textAnchor:"middle",fontSize:16,fontWeight:400},className:"actor",alignmentBaseline:"central",dominantBaseline:"central",y:"530.5",x:475},r.createElement("tspan",{dy:0,x:475},"Database(DB)"))))),w={sidebar_position:5},b="Design Convert System",N={unversionedId:"tutorial/deep-understand-xpla/convert",id:"tutorial/deep-understand-xpla/convert",title:"Design Convert System",description:"What is 'Convert'?",source:"@site/startlearning/3-tutorial/3-deep-understand-xpla/5-convert.mdx",sourceDirName:"3-tutorial/3-deep-understand-xpla",slug:"/tutorial/deep-understand-xpla/convert",permalink:"/xpla-academy-dev/startlearning/tutorial/deep-understand-xpla/convert",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Write and Build Cosmwasm Contracts",permalink:"/xpla-academy-dev/startlearning/tutorial/deep-understand-xpla/write-contract"},next:{title:"Design Swap System",permalink:"/xpla-academy-dev/startlearning/tutorial/deep-understand-xpla/swap"}},C={},T=[{value:"What is &#39;Convert&#39;?",id:"what-is-convert",level:2},{value:"Learn how Convert works!",id:"convert-process",level:2},{value:"Changing in-game currency to CW20",id:"convert-case1",level:3},{value:"2. Changing CW20 to in-game currency",id:"convert-case2",level:3},{value:"Wrapping Up",id:"wrapping-up",level:2}],S={toc:T},F="wrapper";function D(e){let{components:t,...n}=e;return(0,s.kt)(F,(0,a.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"design-convert-system"},"Design Convert System"),(0,s.kt)("h2",{id:"what-is-convert"},"What is 'Convert'?"),(0,s.kt)("p",null,"Have you played ",(0,s.kt)("a",{parentName:"p",href:"/#playgame"},"\ud83c\udfaeBreak The Bricks"),"? (If not, go ahead and try out now!\ud83d\udc7e) In the game, you can earn DIAMOND(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") through gameplay."),(0,s.kt)("p",null,"\ud83e\udd2fDid you know that DIAMOND(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") is just game data, not a CW20 token for the blockchain?"),(0,s.kt)("p",null,"However, through the 'convert' feature on the ",(0,s.kt)("a",{parentName:"p",href:"/ops"},"Web3 Gaming Ops")," page, you can exchange your DIAMOND(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") for ACADEMY-TKN(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),"), the CW20 token.\ud83d\udcb8\ud83d\ude0e"),(0,s.kt)("p",null,"Why use the 'Convert' process?\nDistributing CW20 tokens (",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") directly as game rewards would lead to transaction fees every time. Which could be a pain in the butt for both gamers and game developers at some point. \ud83d\ude2c"),(0,s.kt)("p",null,"To reduce fees, XPLA ACADEMY TEAM suggests designing in-game currency (",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") as rewards, letting users exchange DIAMOND(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") for CW20 tokens (",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") when they want! In this lesson, we'll look at how the Convert feature can be implemented."),(0,s.kt)(l.Z,{summary:"CW20 tokens vs. In-Game Currency",mdxType:"Details"},(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"center"},"Icon IMG"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Storage Location"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"center"},(0,s.kt)(o.I_,{mdxType:"DIAMOND"})),(0,s.kt)("td",{parentName:"tr",align:"center"},"DIAMOND"),(0,s.kt)("td",{parentName:"tr",align:"center"},"In-game currency"),(0,s.kt)("td",{parentName:"tr",align:"center"},"on Game DB as a game data")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"center"},(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"})),(0,s.kt)("td",{parentName:"tr",align:"center"},"ACADEMY-TKN"),(0,s.kt)("td",{parentName:"tr",align:"center"},"CW20 tokens"),(0,s.kt)("td",{parentName:"tr",align:"center"},"on XPLA Blockchain Network")))),(0,s.kt)("p",null,"In-game currency is most likely game data, like DIAMOND(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),").\nIf it's game data, it's unlikely to be saved on the blockchain network.")),(0,s.kt)("h2",{id:"convert-process"},"Learn how Convert works!"),(0,s.kt)("p",null,"There are two scenarios when a user requests Convert:"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/deep-understand-xpla/convert#convert-case1"},"1. I want to change in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") to CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),")")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/deep-understand-xpla/convert#convert-case2"},"2. I want to change CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") to in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),")")),(0,s.kt)("h3",{id:"convert-case1"},"Changing in-game currency to CW20"),(0,s.kt)("p",null,"Let\u2019s look at the first scenario.\nThe user's amount of in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") is tracked in the game's database, while the ownership of CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") is recorded on the XPLA blockchain.\nTo convert in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") to CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),"), the game database needs to decrease the user's in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") balance, and CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") must be sent to the user's wallet."),(0,s.kt)("p",null,"Normally, when you send tokens on the blockchain, the sender pays the fees. But in Convert, the user getting the tokens pays the fees. "),(0,s.kt)("p",null,"\ud83d\ude30If the game developer pays all Convert fees, it's going to be tough to manage as more users Convert, causing higher expenses.\nTherefore, a Convert transaction needs signatures from both ",(0,s.kt)("u",null,"the game developer's wallet, for sending CW20 tokens"),", and ",(0,s.kt)("u",null,"the user's wallet, for covering the fees"),'. \ud83e\udd1d\ud83d\udcdd (* By "game developer," it could be the game operator, company, etc.)'),(0,s.kt)("p",null,"The first scenario can be represented in a diagram as shown below.\nIt might seem complicated, but taking it step by step makes it easy to grasp."),(0,s.kt)(v,{mdxType:"ConvertCase1"}),(0,s.kt)("br",null),(0,s.kt)("admonition",{type:"danger"},(0,s.kt)("p",{parentName:"admonition"},"The example is just one way to set up Convert, missing some details like error handling. There's no one-size-fits-all method; how you design things like API or DB depends on the type of game. "),(0,s.kt)("p",{parentName:"admonition"},"So, use the example code as a guide and adjust it to fit your preferences!")),(0,s.kt)("p",null,"If multiple users send Convert requests simultaneously and the game DEV tries to create several Convert transactions at once, there's a problem.\nTransactions with the same Sequence value can't be recorded on the blockchain, causing a Sequence Mismatch Error and may disrupt this process.\nTo avoid this, each transaction should have a unique Sequence value, written in the order of the requests."),(0,s.kt)("p",null,"If you use a Load Balancer for the game server, be cautious to avoid Sequence mismatch errors. If you're unsure about Sequence mismatch, check the ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/deep-understand-xpla/account-sequence"},"Decode Account Number and Sequences in transactions")," lesson for clarification."),(0,s.kt)("p",null,"Let's see how it works with the following Pseudo code. (The code won't directly run as is because it's Pseudo code.)"),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step1"},"Step 1.")," User Client App -> Convert Server : Convert request to change in-game currency to CW20"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{6} title="User Client App"',"{6}":!0,title:'"User',Client:!0,'App"':!0},'import { useWallet } from "@xpla/wallet-provider";\n\nconst { wallets } = useWallet();\nconst userAddress = wallets[0].xplaAddress;\n\nconst unsignedResponse = await axios.post(\n    "https://convertserver.com/gamecurrency-to-coin-unsigned", \n    {\n        userAddress: userAddress, \n        amount : 1,\n    }\n); \n')),(0,s.kt)("p",null,"User wants to change in-game currency to CW20.\nThe User Client App sends a POST request to the Convert Server, including the user's wallet address (userAddress) and the desired in-game currency amount (amount)."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step2"},"Step 2.")," Convert Server -> Database (DB) : Check if the user has enough in-game currency and subtract it by the requested amount"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"db.query('update user_info set game_currency = game_currency - ? where pid = ? ', [req.body.amount, playerId]);\n")),(0,s.kt)("p",null,"If the user has enough, subtract the requested Convert amount from their balance."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step3"},"Step 3.")," Convert Server : Generate an unsigned transaction for the game DEV to send CW20 to user's wallet"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{6,17,29,31} title="Convert Server"',"{6,17,29,31}":!0,title:'"Convert','Server"':!0},'import { LCDClient, MsgExecuteContract, TxAPI, Fee } from "@xpla/xpla.js"\n\nconst lcd = new LCDClient({ chainID, URL });\nconst tx_api = new TxAPI(lcd);\n\nconst cw20TransferMsg = new MsgExecuteContract(\n        game_operator_address,\n        cw20_contract_address, \n        {\n            transfer: {\n                recipient : req.body.userAddress,\n                amount: String(req.body.amount)\n            }\n        }\n    )\n\nconst simul_fee = await tx_api.estimateFee(\n    [        \n    { \n        sequenceNumber: game_operator_address_sequence, \n        publicKey: game_operator_address_pubKey \n    }\n    ],\n    {\n    msgs: [cw20TransferMsg],\n    gasAdjustment: 1.5,         \n    }\n);\nconst fee = new Fee(simul_fee.gas_limit, simul_fee.amount.toString(), req.body.userAddress); // gas_limit, amount, payer\n\nconst tx = await lcd.tx.create([], {msgs: [cw20TransferMsg], fee }) // signers, options\n')),(0,s.kt)("p",null,"Calculate the estimated transaction fee (simul_fee) and create a transaction for the game DEV's wallet (game_operator_address) to send CW20 to the user's wallet (userAddress). "),(0,s.kt)("p",null,"When setting up the fee variable, make the user's wallet the fee payer by passing it as the payer parameter."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step4"},"Step 4.")," Convert Server -> User Client App : Send unsigned transaction to the user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"const unsignedTx = Buffer.from(tx.toBytes()).toString('base64')\nconst result = { unsignedTx : unsignedTx }\nreturn result\n")),(0,s.kt)("p",null,"Respond to the User Client's POST request by sending the unsigned transaction."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step5"},"Step 5.")," User Client App : User signs unsigned transaction. (agreeing to cover fees)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{9,12} title="User Client App"',"{9,12}":!0,title:'"User',Client:!0,'App"':!0},'const unsignedResponse = await axios.post(unsignedUrl, unsignedPost);\nconst unsignedTx = unsignedResponse.data.unsignedTx;\n\nif (unsignedTx === undefined) {\n    throw new Error("Response is undefined!");\n}\nconst decodedTx = Tx.fromBuffer(Buffer.from(unsignedTx, "base64"));\n\nconst { result: signedTx, success } = await connectedWallet.sign({\n    msgs: decodedTx.body.messages,\n    fee: decodedTx.auth_info.fee,\n    signMode: SignMode.SIGN_MODE_LEGACY_AMINO_JSON,\n});\n')),(0,s.kt)("p",null,"The user client signs the unsigned transaction (unsignedResponse) from the Convert Server. For the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/user/run-node/txs#signing-with-multiple-signers"},"multi-signature")," Convert transaction in ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/deep-understand-xpla/convert#convert-case1"},"our first scenario"),", use the ",(0,s.kt)("strong",{parentName:"p"},"SignMode.SIGN_MODE_LEGACY_AMINO_JSON")," variable."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step6"},"Step 6.")," User Client App -> Convert Server : Return the transaction with the user's signature"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{3,6,7} title="User Client App"',"{3,6,7}":!0,title:'"User',Client:!0,'App"':!0},'const userSignedTx = Buffer.from(signedTx.toBytes()).toString("base64");\n\nconst res = await axios.post(\n    "https://convertserver.com/gamecurrency-to-coin-signed", \n    {\n        wallet: userAddress,\n        userSignedTx: userSignedTx,\n    }\n);\n')),(0,s.kt)("p",null,"The user client sends a POST request to the Convert Server with the transaction info (userSignedTx), including the user wallet address (userAddress) and signature."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step7"},"Step 7.")," Convert Server -> Database(DB) : Lock DB,  request Sequence Data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{6,9} title="Convert Server"',"{6,9}":!0,title:'"Convert','Server"':!0},"const game_opeartor_mk = new MnemonicKey({ mnemonic: opeartorMnemonicKey })\nconst operatorWallet = lcd.wallet(game_opeartor_mk);\nconst operatorState = await operatorWallet.accountNumberAndSequence()\nconst operatorAccNum = operatorState.account_number   \n\nawait db.beginTransaction()\nlet txResult; \ntry {\n    const [data, ] = await db.query('SELECT sequence FROM operator_sequence WHERE accAddress = ? FOR UPDATE', [operatorWallet.key.accAddress]);\n    const operatorSeq = data[0].sequence\n")),(0,s.kt)("p",null,"In the example, ",(0,s.kt)("inlineCode",{parentName:"p"},"beginTransaction")," locks the DB, fetching the game operator wallet's Sequence with a query."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step8"},"Step 8.")," Convert Server : Sign transaction with the game DEV\u2019s wallet using Sequence Data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{9,12,14,15} title="Convert Server"',"{9,12,14,15}":!0,title:'"Convert','Server"':!0},"try { // step 7\n    const [data, ] = await db.query('SELECT sequence FROM operator_sequence WHERE accAddress = ? FOR UPDATE', [operatorWallet.key.accAddress]); // step 7\n    const operatorSeq = data[0].sequence // step 7\n\n    const signOption: SignOptions = {\n    chainID: chainID,\n    accountNumber: operatorAccNum,\n    sequence: operatorSeq,\n    signMode: SignMode.SIGN_MODE_LEGACY_AMINO_JSON\n    }\n    \n    const tx = Tx.fromBuffer(Buffer.from(String(req.body.userSignedTx), 'base64'))\n    const allSignedTx = await operatorWallet.key.signTx(tx, signOption, false)\n    allSignedTx.signatures.reverse()\n    allSignedTx.auth_info.signer_infos.reverse()\n    ...\n")),(0,s.kt)("p",null,"Add game DEV's wallet signature to the transaction using the received Sequence Data from DB.\nSign with ",(0,s.kt)("strong",{parentName:"p"},"SignMode.SIGN_MODE_LEGACY_AMINO_JSON"),"."),(0,s.kt)(l.Z,{summary:"Why use reverse() method of signatures and signer_infos in the last part?",mdxType:"Details"},(0,s.kt)("p",null,"We got the user wallet's signature for fees and later received the game DEV wallet's signature for CW20 token transfer. The current order of signatures in the transaction (variable ",(0,s.kt)("inlineCode",{parentName:"p"},"allSignedTx"),") is user wallet followed by the game DEV wallet. "),(0,s.kt)("p",null,"Game DEV wallet\u2019s signature is needed for the Execute transaction. User\u2019s signature is added for approval of fee payment. If the user didn't pay the fee, only the game DEV wallet's token transfer signature is needed."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/xpladev/xpla/blob/aa5c2e3cac00c2286f3ce4ba2526df6cddc3f550/third_party/proto/cosmos/tx/v1beta1/tx.proto#L174C1-L176C96"},"Despite adding a fee payer in Cosmos SDK, the signature order remains the same: game DEV wallet followed by the user wallet."),"\nThe reverse function in the example adjusts the signature order for successful transaction creation.")),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step9"},"Step 9.")," Convert Server : Execute transaction with both signatures on the XPLA network"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"txResult = await lcd.tx.broadcastSync(allSignedTx)      \n")),(0,s.kt)("p",null,"Execute transaction on the XPLA network!!"),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step10"},"Step 10.")," Convert Server -> Database(DB) :  Send user transaction result"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"    await db.execute(`UPDATE operator_sequence SET sequence = ? WHERE accAddress = ?`, [operatorSeq+1, operatorWallet.key.accAddress])\n\n    await db.commit(); \n    db.release();\n")),(0,s.kt)("p",null,"For a successful  transaction, update the game DEV wallet's Sequence Data in the DB and release the lock."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case1-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case1-step11"},"Step 11.")," Convert Server -> User Client App :  Increase the Sequence Data on DB by 1 and unlock it"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"return { txhash : txResult.txhash }\n")),(0,s.kt)("p",null,"In response to the User Client's Post request, the transaction propagation result is provided."),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"convert-case2"},"2. Changing CW20 to in-game currency"),(0,s.kt)("p",null,"The second scenario is simpler!\nTo convert CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") to in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),"), the user wallet sends CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") to the game DEV wallet and increases the user's in-game currency(",(0,s.kt)(o.I_,{mdxType:"DIAMOND"}),") amount in the DB.\nThe process is outlined below."),(0,s.kt)(E,{mdxType:"ConvertCase2"}),(0,s.kt)("br",null),(0,s.kt)("p",null,"The user wallet sends CW20(",(0,s.kt)(o.dP,{mdxType:"ACADEMYTKN"}),") and covers the transaction fee, making Convert transaction creation simple with only the user's signature.\nNo need for the game DEV wallet signature! \u3161 Meaning, no need to worry about Sequence mismatch Errors.\nLet's see how it works with the following Pseudo code. (The code won't directly run as is because it's Pseudo code.)"),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step1"},"Step 1.")," User Client App -> Convert Server : Request to Convert CW20 to In-Game Currency"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{6} title="User Client App"',"{6}":!0,title:'"User',Client:!0,'App"':!0},'import { useWallet } from "@xpla/wallet-provider";\n\nconst { wallets } = useWallet();\nconst userAddress = wallets[0].xplaAddress;\n\nconst unsignedResponse = await axios.post(\n    "https://convertserver.com/coin-to-gamecurrency-unsigned", \n    {\n        userAddress: userAddress, \n        amount : 1,\n    }\n); \n')),(0,s.kt)("p",null,"The user wants to exchange CW20 for in-game currency. The user client app sends a Post request to the Convert Server with the user's wallet address and the desired in-game currency amount."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step2"},"Step 2.")," Convert Server : Generate an unsigned transaction where the user wallet sends CW20 to the game DEV wallet"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{7,18,31,33} title="Convert Server"',"{7,18,31,33}":!0,title:'"Convert','Server"':!0},'import { LCDClient, MsgExecuteContract, TxAPI, Fee } from "@xpla/xpla.js"\n\nconst lcd = new LCDClient({ chainID, URL });\nconst tx_api = new TxAPI(lcd);\nconst userAccountInfo = await lcd.auth.accountInfo(req.body.userAddress);\n\nconst cw20TransferMsg = new MsgExecuteContract(\n    req.body.userAddress,\n    cw20_contract_address, \n    {\n        transfer: {\n            recipient : game_operator_address,\n            amount: String(req.body.amount)\n        }\n    }\n)\n\nconst simul_fee = await tx_api.estimateFee(\n    [        \n        { \n            sequenceNumber: userAccountInfo.getSequenceNumber(), \n            publicKey: userAccountInfo.getPublicKey()\n        }\n    ],\n    {\n        msgs: [cw20TransferMsg],\n        gasAdjustment: 1.5,         \n    }\n);\n\nconst fee = new Fee(simul_fee.gas_limit, simul_fee.amount.toString());\n\nconst tx = await lcd.tx.create([], {msgs: [cw20TransferMsg], fee } )\n')),(0,s.kt)("p",null,"Calculate the estimated fee (simul_fee) and create a transaction.\nThe user wallet (userAddress) sends CW20 to the game DEV wallet (game_operator_address) without specifying a payer in the fee variable."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step3"},"Step 3.")," Convert Server -> User Client App : Send the unsigned transaction to the user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"const unsignedTx = Buffer.from(tx.toBytes()).toString('base64')\nconst result = { unsignedTx : unsignedTx }\nreturn result\n")),(0,s.kt)("p",null,"Respond to the User Client's POST request with an unsigned transaction."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step4"},"Step 4.")," User Client App : The user signs the unsigned transaction"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{9,12} title="User Client App"',"{9,12}":!0,title:'"User',Client:!0,'App"':!0},'const unsignedResponse = await axios.post(unsignedUrl, unsignedPost);\nconst unsignedTx = unsignedResponse.data.unsignedTx;\n\nif (unsignedTx === undefined) {\n    throw new Error("Response is undefined!");\n}\nconst decodedTx = Tx.fromBuffer(Buffer.from(unsignedTx, "base64"));\n\nconst { result: signedTx, success } = await connectedWallet.sign({\n    msgs: decodedTx.body.messages,\n    fee: decodedTx.auth_info.fee,\n    signMode: SignMode.SIGN_MODE_DIRECT,\n});\n')),(0,s.kt)("p",null,"The User Client signs the unsigned transaction (unsignedResponse) for the Convert Server using SignMode.SIGN_MODE_DIRECT. (Since the Convert transaction in ",(0,s.kt)("a",{parentName:"p",href:"/startlearning/tutorial/deep-understand-xpla/convert#convert-case2"},"second scenario")," requires ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/user/run-node/txs#signing-with-multiple-signers"},"single signature"),")"),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step5"},"Step 5.")," User Client App -> Convert Server :  Re-send the transaction with the user's signature"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{3,6,7} title="User Client App"',"{3,6,7}":!0,title:'"User',Client:!0,'App"':!0},'const userSignedTx = Buffer.from(signedTx.toBytes()).toString("base64");\n\nconst res = await axios.post(\n    "https://convertserver.com/coin-to-gamecurrency-signed", \n    {\n        wallet: userAddress,\n        userSignedTx: userSignedTx,\n    }\n);\n')),(0,s.kt)("p",null,"The User Client sends a POST request to the Convert Server with the user wallet address (userAddress) and the signed transaction (userSignedTx)."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step6"},"Step 6.")," Convert Server : Execute the transaction with the user's wallet signature to the XPLA network"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"const tx = Tx.fromBuffer(Buffer.from(String(req.body.userSignedTx), 'base64'))\n\ntxResult = await lcd.tx.broadcastSync(allSignedTx)      \n")),(0,s.kt)("p",null,"Execute transaction on the XPLA network!!!"),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step7"},"Step 7.")," Convert Server -> Database(DB) : Increase recorded in-game currency in user's DB as requested"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"db.query('update user_info set game_currency = game_currency + ? where pid = ? ', [req.body.amount, playerId]);\n")),(0,s.kt)("p",null,"Increase the requested in-game currency amount (req.body.amount)."),(0,s.kt)("br",null),(0,s.kt)(k,{to:"/startlearning/tutorial/deep-understand-xpla/convert#case2-pic",className:"text-black",mdxType:"CustomHashLink"},(0,s.kt)("span",{className:"text-[#004FFF] font-bold text-[17px] textDecoration-xpla",id:"case2-step8"},"Step 8.")," Convert Server -> User Client App :  Send the transaction result to the user"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Convert Server"',title:'"Convert','Server"':!0},"return { txhash : txResult.txhash }\n")),(0,s.kt)("p",null,"In response to the User Client's Post request, let the user know the transaction result!\ud83c\udf89"),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"wrapping-up"},"Wrapping Up"),(0,s.kt)("p",null,"How were the details of implementing the Convert feature?\nWith Convert, users can easily exchange in-game currency and CW20.\nTry out adding a Convert system to your project! \ud83d\ude09"))}D.isMDXComponent=!0}}]);