(self.webpackChunkxpla_academy=self.webpackChunkxpla_academy||[]).push([[9572],{51681:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>h,default:()=>y,frontMatter:()=>x,metadata:()=>b,toc:()=>v});var l=t(87462),o=t(67294),a=t(3905),c=t(18947);const s=()=>{const e={"Connect.jsx":'import { ConnectType, useWallet, WalletStatus } from "@xpla/wallet-provider";\nimport React from "react";\n\nexport default function Connect() {\n  const {\n    status,\n    network,\n    wallets,\n    availableConnections,\n    availableConnectTypes,\n    connect,\n    disconnect,\n  } = useWallet();\n\n  const clickConnect = async () => {\n    if (status === WalletStatus.WALLET_NOT_CONNECTED) {\n      connect();\n    } else {\n      disconnect();\n    }\n  };\n  return (\n    <div className="buttonContainer" onClick={clickConnect}>\n      {status === WalletStatus.WALLET_NOT_CONNECTED ? (\n        <span>Connect Wallet</span>\n      ) : wallets.length == 0 ? (\n        \'Loading...\'\n      ) : (\n        <span>{(wallets[0].xplaAddress)}</span>\n      )}\n    </div>\n  );\n}',"SendTx.jsx":'import { useConnectedWallet, UserDenied, useWallet, WalletStatus } from "@xpla/wallet-provider";\nimport React, { useState } from "react";\nimport { Fee,  MsgSend, TxResult } from \'@xpla/xpla.js\';\n\nexport default function SendTx() {\n  const {\n    status,\n    network,\n    wallets,\n    availableConnectTypes,\n    connect,\n    disconnect,\n  } = useWallet();\n  const clickConnect = () => {\n    if (status === WalletStatus.WALLET_NOT_CONNECTED) {\n      connect(availableConnectTypes[0]);\n    } else {\n      disconnect();\n    }\n  };\n  const [amount, setAmount] = useState(\'\');\n  const [recipient, setRecipient] = useState(\'\');\n\n  const [txResult, setTxResult] = useState(null);\n  const [txError, setTxError] = useState(null);\n  \n  const connectedWallet = useConnectedWallet();\n\n  const handleSend = async () => {\n    try{\n\n    const transactionMsg = {\n        fee: new Fee(500000, \'500000000000000000axpla\'),\n        msgs: [\n          new MsgSend(\n            connectedWallet.walletAddress,\n            recipient,\n            {\n                axpla : amount +"000000000000000000"\n            }\n          ),\n        ],\n      };\n      const tx = await connectedWallet.post(transactionMsg);\n      setTxResult(tx);\n    } catch (error) {\n      if (error instanceof UserDenied) {\n        setTxError(\'User Denied\');\n      } else {\n        setTxError(\n          "Unknown Error: " + error instanceof Error ? error.message : String(error)\n          ,\n        );\n      }\n    }\n\n  }\n\n  return (\n<>\n<div\n    className="buttonContainer"\n  >\n      <div className="mb-2">\n        <label\n          htmlFor="default-input"\n          className="connectwallet"\n        >\n          Recipient\n        </label>\n        <input\n          autoComplete="off"\n          type="text"\n          id="default-input"\n          placeholder="Input Recipient\'s xpla address."\n          onChange={(e) => setRecipient(e.target.value)}\n          className="connectwallet"\n          style={{\n            width : \'100%\'\n          }}\n        />\n      </div>\n      <div className="mb-2">\n        <label\n          htmlFor="default-input"\n          className="connectwallet"\n        >\n          Amount\n        </label>\n        <input\n          type="text"\n          id="default-input"\n          autoComplete="off"\n          placeholder="Input number. If you want to send 1 Xpla, just input 1."\n          onChange={(e) => setAmount(e.target.value)}\n          className="connectwallet"\n          style={{\n            width : \'100%\'\n          }}\n        />\n      </div>\n  </div>\n  <button onClick={handleSend}>\n    send\n  </button>\n  <div className="connectwallet">\n        <div className="connectwallet">\n          Result\n          {txResult && (\n            <a\n              href={"https://explorer.xpla.io/" + network.name + "/tx/" + txResult.result.txhash}\n              target="_blank"\n              rel="noreferrer"\n            >\n              {txResult.result.txhash}\n            </a>\n          )}\n          <span>{txError}</span>\n        </div>\n      </div>\n</>\n  );\n}',"App.js":'import Connect from "./Connect";\nimport SendTx from "./SendTx";\n    \nexport default function App() {\n  return <>\n    <Connect />\n    <SendTx/>\n  </>\n}\n    ',"index.js":'import React from "react";\n    import { createRoot } from "react-dom/client";\n    import "./styles.css";\n    import {\n      getChainOptions,\n      WalletProvider,\n    } from "@xpla/wallet-provider";\n    import App from "./App";\n    \n    const root = createRoot(document.getElementById(\'root\'));\n    getChainOptions().then((chainOptions) => {\n      root.render(\n        <WalletProvider {...chainOptions}>\n          <App />\n        </WalletProvider>\n      );\n    });',"styles.css":"body {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n\nh1 {\n  font-size: 1.5rem;\n}\n\n.buttonContainer {\n  display : flex;\n  justify-content: center;\n  background-color: white;\n  cursor : pointer;\n  border-radius: 24px;\n  border : 1px solid black;\n  padding : 8px;\n}\n\n"};return o.createElement(c.oT,{theme:"light",template:"react",customSetup:{dependencies:{express:"^4.18.2","stream-browserify":"latest","@xpla/xpla.js":"^0.3.1","@xpla/wallet-provider":"^0.4.1","react-scripts":"^4.0.3"}},options:{visibleFiles:["App.js","Connect.jsx","SendTx.jsx"]},files:e},o.createElement(c.sp,null,o.createElement(c.Lj,null),o.createElement(c._V,{closableTabs:!0,showTabs:!0})),o.createElement(c.sp,null,o.createElement(c.Gj,null)),o.createElement(c.sp,null,o.createElement(c.Tq,null)))};var r=t(52252),i=t(95999);const d="\n@keyframes wallet-select-modal--dim-enter {\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n}\n@keyframes wallet-select-modal--content-enter {\n  0% {\n    opacity: 0;\n    transform: scale(0.4);\n  }\n  \n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.wallet-select-modal {\n  position: fixed;\n  z-index: 100000;\n  \n  color: #212121;\n  \n  left: 0;\n  top: 0;\n  bottom : 0;\n  width: 100vw;\n  \n  font-family: sans-serif;\n  \n  display: grid;\n  place-content: center;\n}\n.wallet-select-modal > .wallet-select-modal--dim {\n  position: fixed;\n  z-index: -1;\n  \n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.3);\n  \n  animation: wallet-select-modal--dim-enter 0.2s ease-in-out;\n}\n.wallet-select-modal > .wallet-select-modal--content {\n  box-sizing: border-box;\n  \n  border-radius: 8px;\n  \n  background-color: #ffffff;\n  box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);\n  \n  animation: wallet-select-modal--content-enter 0.2s ease-in-out;\n  \n  width: 100vw;\n  max-width: 480px;\n  padding: 40px;\n}\n.wallet-select-modal > .wallet-select-modal--content h1 {\n  font-size: 20px;\n  font-weight: bold;\n  \n  margin: 0 0 32px 0;\n  \n  text-align: center;\n}\n.wallet-select-modal > .wallet-select-modal--content ul {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  \n  display: flex;\n  flex-direction: column;\n}\n.wallet-select-modal > .wallet-select-modal--content ul li {\n  border-top: 1px solid #cfd8ea;\n}\n.wallet-select-modal > .wallet-select-modal--content ul li:last-child {\n  border-bottom: 1px solid #cfd8ea;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button {\n  width: 100%;\n  height: 66px;\n  \n  border: none;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  \n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button:hover {\n  background-color: hsl(220, 39%, 86%, 0.25);\n}\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--icon {\n  display: inline-grid;\n  width: 50px;\n  height: 50px;\n  \n  place-content: center;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--icon img {\n  width: 30px;\n  height: 30px;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--description {\n  flex: 1;\n  text-align: left;\n  \n  font-size: 16px;\n  font-weight: 600;\n  color: #212121;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button svg {\n  width: 18px;\n  height: 18px;\n  \n  fill: #cfd8ea;\n}\n.wallet-select-modal > .wallet-select-modal--content ul button:hover svg {\n  fill: #2043b5;\n}\n@media (max-width: 450px) {\n  .wallet-select-modal {\n    place-content: flex-end;\n  }\n  \n  .wallet-select-modal > .wallet-select-modal--content {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n}\n";function m(e){return new Promise((n=>{const t=document.createElement("style"),l=document.createElement("div");const o=function(e){let{connections:n,onComplete:t}=e;const l=document.createElement("div");l.setAttribute("class","wallet-select-modal");const o=document.createElement("div");o.setAttribute("class","wallet-select-modal--dim"),l.appendChild(o);const a=document.createElement("section");a.setAttribute("class","wallet-select-modal--content"),l.appendChild(a);const c=document.createElement("h1");c.textContent="Select a Wallet",a.appendChild(c);const s=document.createElement("ul");a.appendChild(s);for(const r of n){const e=document.createElement("li"),n=document.createElement("button");n.addEventListener("click",(()=>t(r))),e.appendChild(n);const l=document.createElement("span");l.setAttribute("class","wallet-select-modal--icon"),n.appendChild(l);const o=document.createElement("img");o.setAttribute("src",r.icon),o.setAttribute("alt",`${r.name} [${r.identifier}]`),l.appendChild(o);const a=document.createElement("span");a.setAttribute("class","wallet-select-modal--description"),a.textContent=r.name,n.appendChild(a);const c=document.createElementNS("http://www.w3.org/2000/svg","svg");c.setAttribute("viewBox","0 0 24 24"),n.appendChild(c);const i=document.createElementNS("http://www.w3.org/2000/svg","path");i.setAttribute("d","M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"),c.appendChild(i),s.appendChild(e)}return o.addEventListener("click",(()=>t(null))),l}({connections:e,onComplete:function(e){n(e?[e.type,e.identifier]:null),t.parentElement?.removeChild(t),l.parentElement?.removeChild(l),document.body.style.overflow="unset"}});t.textContent=d,l.appendChild(o),document.querySelector("head")?.appendChild(t),document.querySelector("body")?.appendChild(l),document.body.style.overflow="hidden"}))}var p=t(25108);function u(){const{status:e,network:n,wallets:t,availableConnections:l,availableConnectTypes:a,connect:c,disconnect:s}=(0,r.Os)();return o.createElement("div",{className:"buttonContainer",onClick:async()=>{if(e===r.PR.WALLET_NOT_CONNECTED)try{const e=await m(l.filter((e=>e.type!=r.cP.READONLY)));if(!e)throw p.log("Wallet Connect Error"),new Error("Wallet Connect Error");const n=e[0],t=e[1]||"";c(n,t)}catch(n){p.log(n)}else s()}},o.createElement("div",{className:"connectwallet"},e===r.PR.WALLET_NOT_CONNECTED?o.createElement(i.Z,{id:"ddd"},"Connect Wallet"):0==t.length?"Loading...":o.createElement("span",null,t[0].xplaAddress)))}var w=t(25108);const f=e=>{let{children:n}=e;const[t,l]=(0,o.useState)(),[a,c]=(0,o.useState)(!0);return(0,o.useEffect)((()=>{c("undefined"==typeof window)}),[]),(0,o.useEffect)((()=>{(0,r.c3)().then((e=>l(e))).catch((e=>{w.log(e)}))}),[]),a?o.createElement(o.Fragment,null):o.createElement(r.nS,t,n)},x={sidebar_position:3},h="React\ub85c Wallet Provider \uc5f0\uacb0\ud558\uae30",b={unversionedId:"tutorial/add-func-to-game-2/walletprovider",id:"tutorial/add-func-to-game-2/walletprovider",title:"React\ub85c Wallet Provider \uc5f0\uacb0\ud558\uae30",description:"Wallet Provider\ub780 \ubb34\uc5c7\uc77c\uae4c\uc694? XPLA Vault Chrome Extension\uacfc Client \uc571\uc744 \uc5f0\uacb0\ud574\uc90d\ub2c8\ub2e4. (Mermaid \uad6c\uc870 \ud544\uc694)",source:"@site/docs/3-tutorial/3-add-func-to-game-2/3-walletprovider.mdx",sourceDirName:"3-tutorial/3-add-func-to-game-2",slug:"/tutorial/add-func-to-game-2/walletprovider",permalink:"/xpla-academy-dev/ko-kr/docs/tutorial/add-func-to-game-2/walletprovider",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\ud2b8\ub79c\uc7ad\uc158\uc5d0\uc11c AccountNumber\uc640 Sequence \ud56d\ubaa9 \uc774\ud574\ud558\uae30",permalink:"/xpla-academy-dev/ko-kr/docs/tutorial/add-func-to-game-2/account-sequence"},next:{title:"Convert \uae30\ub2a5 \uc801\uc6a9\ud558\uae30",permalink:"/xpla-academy-dev/ko-kr/docs/tutorial/add-func-to-game-2/convert"}},g={},v=[],C={toc:v},E="wrapper";function y(e){let{components:n,...t}=e;return(0,a.kt)(E,(0,l.Z)({},C,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react\ub85c-wallet-provider-\uc5f0\uacb0\ud558\uae30"},"React\ub85c Wallet Provider \uc5f0\uacb0\ud558\uae30"),(0,a.kt)(f,{mdxType:"WalletWrap"},(0,a.kt)(u,{mdxType:"Connect"})),(0,a.kt)(s,{mdxType:"WalletProvider"}),(0,a.kt)("p",null,"Wallet Provider\ub780 \ubb34\uc5c7\uc77c\uae4c\uc694? XPLA Vault Chrome Extension\uacfc Client \uc571\uc744 \uc5f0\uacb0\ud574\uc90d\ub2c8\ub2e4. (Mermaid \uad6c\uc870 \ud544\uc694)"))}y.isMDXComponent=!0},36563:()=>{},46601:()=>{},89214:()=>{},85568:()=>{},34845:()=>{},52361:()=>{},94616:()=>{},33370:()=>{}}]);